name: Build Qt Application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      QT_VERSION: '6.5.3'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 前端和 Python 步骤 (不变) ---
      - name: Set up pnpm and Node.js
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Set up Node.js for pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'web/vue-proj/pnpm-lock.yaml'
      - name: Install and Build Vue Project
        working-directory: ./web/vue-proj
        run: |
          pnpm install --frozen-lockfile
          pnpm build
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Run Python preprocessing script
        run: python config_qrc.py

      # --- C++/Qt 构建步骤 ---
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: 'qtwebengine qtwebchannel qtpositioning'

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build Project in Release Mode
        # 【【【决定性的最终修正】】】
        # 强制使用 Release 配置进行编译
        run: cmake --build build --config Release

      - name: Prepare Artifacts for Upload
        # 【【【决定性的最终修正】】】
        # 将所有路径都统一指向唯一正确的 build\bin\Release 目录
        run: |
          New-Item -ItemType Directory -Force deploy
          
          # 定义正确的源路径
          $sourcePath = "build\bin\Release"
          
          Write-Host "Copying files from the correct Release location: $sourcePath"
          
          # 从正确的路径复制 Release 版的 .exe
          Copy-Item -Path "$sourcePath\QtWebSchoolSys.exe" -Destination "deploy\"
          
          # 从正确的路径复制 web 文件夹
          Copy-Item -Path "$sourcePath\web" -Destination "deploy\" -Recurse
          
          # 从项目根目录复制 icons 文件夹 (如果存在)
          if (Test-Path -Path "icons") {
            Copy-Item -Path "icons" -Destination "deploy\" -Recurse
          }
          
          Write-Host "Running windeployqt on the Release executable..."
          # windeployqt 的 --release 参数现在和 Release 版的 exe 完全匹配
          & "$env:QT_ROOT_DIR\bin\windeployqt.exe" --release --no-translations --no-opengl-sw "deploy\QtWebSchoolSys.exe"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: QtWebSchoolSys-Windows-Build
          path: deploy/